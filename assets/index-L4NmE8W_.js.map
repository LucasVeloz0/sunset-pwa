{"version":3,"file":"index-L4NmE8W_.js","sources":["../../src/components/Layout/AppContainer.jsx","../../src/components/Camera/CameraPreview.jsx","../../src/components/Camera/CameraControls.jsx","../../src/components/Camera/PhotoPreview.jsx","../../src/components/Celestial/CelestialToggle.jsx","../../src/utils/timeUtils.js","../../src/components/Celestial/SunInfo.jsx","../../src/components/Celestial/MoonPhase.jsx","../../src/components/Celestial/MoonInfo.jsx","../../src/components/Compass/DirectionArrow.jsx","../../src/components/Compass/Compass.jsx","../../src/components/Layout/ErrorBanner.jsx","../../src/hooks/useGeolocation.js","../../src/utils/angleUtils.js","../../src/hooks/useOrientation.js","../../src/hooks/useCamera.js","../../src/utils/celestialCalculations.js","../../src/hooks/useCelestialData.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst AppContainer = ({ children, isDaytime }) => (\r\n  <div className={`app-container ${isDaytime ? 'day-theme' : 'night-theme'}`}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default AppContainer;","import React from 'react';\r\n\r\nconst CameraPreview = ({ videoRef, facingMode }) => {\r\n    return (\r\n    <video\r\n        ref={videoRef}\r\n        className={`camera-preview${facingMode === 'user' ? ' mirrored' : ''}`}\r\n        playsInline\r\n        muted\r\n    />\r\n\r\n)};\r\n\r\nexport default CameraPreview;","import React from 'react';\r\n\r\nconst CameraControls = ({toggleCamera, capturePhoto, closeCamera}) =>  (\r\n        <div className=\"camera-controls\">\r\n            <button \r\n            className=\"camera-btn\" \r\n            onClick={toggleCamera} \r\n            aria-label=\"Alternar câmera\"\r\n            >\r\n              🔄\r\n            </button>\r\n            <button \r\n            className=\"camera-btn capture-btn\" \r\n            onClick={capturePhoto} \r\n            aria-label=\"Capturar foto\"\r\n            >\r\n              ⭕\r\n            </button>\r\n            <button \r\n            className=\"camera-btn\" \r\n            onClick={closeCamera} \r\n            aria-label=\"Fechar câmera\"\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n    );\r\n\r\n\r\nexport default CameraControls;","import React from 'react';\r\n\r\nconst PhotoPreview = ({ photo, closePreview }) => (\r\n    <div className=\"photo-preview\">\r\n              <img src={photo} alt=\"Foto capturada\" />\r\n              <a\r\n                href={photo}\r\n                download={`por-do-sol-${Date.now()}.jpg`}\r\n                className=\"download-button\"\r\n              >\r\n                ⬇️ Baixar\r\n              </a>\r\n              <button \r\n              onClick={closePreview} \r\n              className=\"close-button\"\r\n              >\r\n                ❌ Fechar\r\n              </button>\r\n            </div>\r\n)\r\n\r\nexport default PhotoPreview;","import React from 'react';\r\n\r\nconst CelestialToggle = ({ celestialBody, setCelestialBody }) => (\r\n  <>\r\n    {/* Botão de alternância */}\r\n    <div className=\"celestial-toggle\">\r\n      <button\r\n        className={celestialBody === 'sun' ? 'active' : ''}\r\n        onClick={() => setCelestialBody('sun')}\r\n      >\r\n        ☀️ Sol\r\n      </button>\r\n      <button\r\n        className={celestialBody === 'moon' ? 'active' : ''}\r\n        onClick={() => setCelestialBody('moon')}\r\n      >\r\n        🌙 Lua\r\n      </button>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default CelestialToggle;","// Função utilitária para formatar horários\r\nexport const formatTime = (date) => {\r\n  if (!date) return '--:--';\r\n  const d = new Date(date);\r\n  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}","import React from 'react';\r\nimport { formatTime } from '../../utils/timeUtils';\r\n\r\nconst SunInfo = ({ sunTimes, isDaytime }) => (\r\n    <div className=\"info-cards\">\r\n        <div className=\"info-card\">\r\n            <span>☀️ Nascer do sol</span>\r\n            <strong>{formatTime(sunTimes?.sunrise)}</strong>\r\n        </div>\r\n        <div className=\"info-card\">\r\n            <span>🌇 Pôr do sol</span>\r\n            <strong>{formatTime(sunTimes?.sunset)}</strong>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SunInfo;","import React from 'react';\r\n\r\nconst MoonPhase = ({ moonPhase }) => (\r\n    <div className=\"info-card moon-phase moon-phase-card\">\r\n        <span>{moonPhase.emoji} Fase</span>\r\n        <strong>{moonPhase.name}</strong>\r\n        <div className=\"moon-phase-bar\">\r\n            <div\r\n                className=\"moon-phase-fill\"\r\n                style={{ width: `${moonPhase.fraction * 100}%` }}\r\n            ></div>\r\n        </div>\r\n        <span className=\"moon-percentage\">\r\n            {Math.round(moonPhase.fraction * 100)}% iluminada\r\n        </span>\r\n    </div>\r\n)\r\n\r\nexport default MoonPhase;","import React from 'react';\r\nimport { formatTime } from '../../utils/timeUtils';\r\nimport MoonPhase from './MoonPhase';\r\n\r\nconst MoonInfo = ({ moonTimes, moonPhase }) => (\r\n    <div className=\"info-cards\">\r\n        <div className=\"info-card\">\r\n            <span>🌕 Nascer da lua</span>\r\n            <strong>{formatTime(moonTimes?.moonrise)}</strong>\r\n        </div>\r\n        <div className=\"info-card\">\r\n            <span>🌑 Pôr da lua</span>\r\n            <strong>{formatTime(moonTimes?.moonset)}</strong>\r\n        </div>\r\n        <MoonPhase moonPhase={moonPhase} />\r\n    </div>\r\n);\r\n\r\nexport default MoonInfo;","import React from 'react';\r\n\r\nconst DirectionArrow = ({ angle, isActive, indicator, className }) => (\r\n  <div \r\n    className={`direction-arrow ${isActive ? 'active' : 'secondary'} ${className}`} \r\n    style={{ \r\n      transform: `rotate(${angle}deg)` \r\n    }}\r\n  >\r\n    <div className=\"celestial-indicator\">\r\n      {indicator}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default DirectionArrow;","import React from 'react';\r\nimport DirectionArrow from './DirectionArrow';\r\n\r\nconst Compass = ({\r\n    celestialBody,\r\n    smoothedSunAngle,\r\n    smoothedMoonAngle,\r\n    moonPhase\r\n}) => (\r\n      <div className=\"compass-wrapper\">\r\n    <div className=\"compass\">\r\n      <DirectionArrow \r\n        angle={smoothedSunAngle}\r\n        isActive={celestialBody === 'sun'}\r\n        indicator=\"☀️\"\r\n        className=\"sun-indicator\"\r\n      />\r\n      <DirectionArrow \r\n        angle={smoothedMoonAngle}\r\n        isActive={celestialBody === 'moon'}\r\n        indicator={moonPhase.emoji}\r\n        className=\"moon-indicator\"\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Compass;\r\n","import React from 'react';\r\n\r\nconst ErrorBanner = ({ messages }) => (\r\n  <div className=\"error-container\">\r\n    {messages.map((message, index) => (\r\n      <div key={index} className=\"error-banner\">\r\n        {message}\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ErrorBanner;","import { useState, useEffect } from 'react';\r\n\r\nexport default function useGeolocation() {\r\nconst [position, setPosition] = useState(null);\r\nconst [error, setError] = useState(null);\r\n\r\n // Obter geolocalização do usuário\r\n  useEffect(() => {\r\n    const handleSuccess = (pos) => {\r\n      setPosition({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude\r\n      });\r\n    };\r\n\r\n    const handleError = (err) => {\r\n      setError(err.message || 'Erro ao obter localização');\r\n    };\r\n\r\n    // Verifica suporte a geolocalização\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocalização não suportada');\r\n      return;\r\n    }\r\n\r\n    // Solicita localização com alta precisão\r\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000\r\n    });\r\n\r\n    // Configurar atualização contínua\r\n    const watchId = navigator.geolocation.watchPosition(\r\n      handleSuccess,\r\n      handleError,\r\n      { enableHighAccuracy: true, timeout: 10000 }\r\n    );\r\n\r\n    return () => {\r\n      navigator.geolocation.clearWatch(watchId);\r\n    };\r\n  }, []);\r\n\r\n  return { position, error };\r\n}","// Normaliza o ângulo de orientação para 0-360 graus\r\nexport const normalizeOrientation = (alpha) => {\r\n  if (alpha === null) return 0;\r\n  return (360 - alpha) % 360;\r\n};\r\n\r\n// Normaliza qualquer ângulo para 0-360\r\nexport const normalizeAngle = (angle) => {\r\n  return ((angle % 360) + 360) % 360;\r\n};\r\n\r\n// Suaviza a transição entre ângulos\r\nexport const smoothAngle = (current, target, factor) => {\r\n  if (current === undefined) return target;\r\n  let diff = (target - current + 180) % 360 - 180;\r\n  diff = diff < -180 ? diff + 360 : diff;\r\n  return current + diff * factor;\r\n};\r\n\r\n// Calcula a diferença angular entre dois ângulos (0-180)\r\nexport const calculateAngleDifference = (angle1, angle2) => {\r\n  const diff = Math.abs(angle1 - angle2) % 360;\r\n  return Math.min(diff, 360 - diff);\r\n};","import { useState, useEffect } from 'react';\r\nimport { normalizeOrientation } from '../utils/angleUtils';\r\n\r\nexport default function useOrientation() {\r\n    const [deviceHeading, setDeviceHeading] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    // Configurar sensor de orientação\r\n    useEffect(() => {\r\n        const handleOrientation = (event) => {\r\n            if (event.alpha !== null) {\r\n                let alpha = event.alpha;\r\n                // Tratamento especial para iOS (webkitCompassHeading)\r\n                if (typeof event.webkitCompassHeading !== 'undefined') {\r\n                    alpha = event.webkitCompassHeading;\r\n                }\r\n\r\n                // Normaliza e atualiza a direção do dispositivo\r\n                setDeviceHeading(normalizeOrientation(alpha));\r\n            }\r\n        };\r\n\r\n        // Verifica suporte ao sensor\r\n        if (window.DeviceOrientationEvent) {\r\n            window.addEventListener('deviceorientation', handleOrientation, true);\r\n        } else {\r\n            setError('Sensor de orientação não suportado neste dispositivo');\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('deviceorientation', handleOrientation);\r\n        };\r\n    }, []);\r\n\r\n    return {\r\n        deviceHeading,\r\n        error\r\n    };\r\n}\r\n","import { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nexport default function useCamera() {\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [photo, setPhoto] = useState(null);\r\n  const [facingMode, setFacingMode] = useState('environment');\r\n  const [error, setError] = useState(null);\r\n  \r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const startCamera = useCallback(async () => {\r\n    try {\r\n      if (videoRef.current && videoRef.current.srcObject) return;\r\n\r\n      const constraints = {\r\n        video: { \r\n          facingMode,\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 }\r\n        }\r\n      };\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.onloadedmetadata = () => {\r\n          videoRef.current.play().catch(err => {\r\n            setError('Erro ao reproduzir vídeo: ' + err.message);\r\n          });\r\n        };\r\n      }\r\n    } catch (err) {\r\n      setError('Erro ao acessar câmera: ' + err.message);\r\n      setCameraActive(false);\r\n    }\r\n  }, [facingMode]);\r\n\r\n  useEffect(() => {\r\n    if (cameraActive) {\r\n      startCamera();\r\n    } else {\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n        videoRef.current.srcObject = null;\r\n      }\r\n    }\r\n  }, [cameraActive, startCamera]);\r\n\r\n  useEffect(() => {\r\n    if (cameraActive) {\r\n      startCamera();\r\n    }\r\n  }, [facingMode, cameraActive, startCamera]);\r\n\r\n  const toggleCamera = () => {\r\n    setFacingMode(prev => prev === 'user' ? 'environment' : 'user');\r\n  };\r\n\r\n  const capturePhoto = useCallback(() => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    \r\n    if (video && canvas && video.readyState >= 2) {\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      if (facingMode === 'user') {\r\n        ctx.translate(canvas.width, 0);\r\n        ctx.scale(-1, 1);\r\n      }\r\n      \r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      setPhoto(canvas.toDataURL('image/jpeg', 0.9));\r\n    }\r\n  }, [facingMode]);\r\n\r\n  const closeCamera = useCallback(() => {\r\n    setCameraActive(false);\r\n    setPhoto(null);\r\n  }, []);\r\n\r\n  return {\r\n    cameraActive,\r\n    setCameraActive,\r\n    photo,\r\n    setPhoto,\r\n    facingMode,\r\n    toggleCamera,\r\n    capturePhoto,\r\n    closeCamera,\r\n    videoRef,\r\n    canvasRef,\r\n    cameraError: error\r\n  };\r\n}","import * as SunCalc from 'suncalc';\r\n\r\nexport const getCurrentSunAzimuth = (lat, lng) => {\r\n  const now = new Date();\r\n  const sunPos = SunCalc.getPosition(now, lat, lng);\r\n  return normalizeAngle((sunPos.azimuth * 180 / Math.PI + 180) % 360);\r\n};\r\n\r\nexport const getCurrentMoonAzimuth = (lat, lng) => {\r\n  const now = new Date();\r\n  const moonPos = SunCalc.getMoonPosition(now, lat, lng);\r\n  return normalizeAngle((moonPos.azimuth * 180 / Math.PI + 180) % 360);\r\n};\r\n\r\nexport const getMoonPhaseEmoji = (fraction) => {\r\n  if (fraction === 0) return '🌑';\r\n  if (fraction < 0.25) return '🌒';\r\n  if (fraction < 0.5) return '🌓';\r\n  if (fraction < 0.75) return '🌔';\r\n  if (fraction === 1) return '🌕';\r\n  if (fraction > 0.75) return '🌖';\r\n  if (fraction > 0.5) return '🌗';\r\n  return '🌘';\r\n};\r\n\r\nexport const getMoonPhaseName = (phase) => {\r\n  if (phase === 0 || phase === 1) return 'Lua Nova';\r\n  if (phase < 0.25) return 'Crescente Inicial';\r\n  if (phase === 0.25) return 'Quarto Crescente';\r\n  if (phase < 0.5) return 'Gibosa Crescente';\r\n  if (phase === 0.5) return 'Lua Cheia';\r\n  if (phase < 0.75) return 'Gibosa Minguante';\r\n  if (phase === 0.75) return 'Quarto Minguante';\r\n  return 'Minguante Final';\r\n};\r\n\r\n// Função auxiliar para normalizar ângulos\r\nconst normalizeAngle = (angle) => {\r\n  return ((angle % 360) + 360) % 360;\r\n};","import { useState, useEffect } from 'react';\r\nimport * as SunCalc from 'suncalc';\r\nimport { \r\n  getCurrentSunAzimuth, \r\n  getCurrentMoonAzimuth,\r\n  getMoonPhaseEmoji,\r\n  getMoonPhaseName\r\n} from '../utils/celestialCalculations';\r\n\r\nexport default function useCelestialData(position) {\r\n  const [sunAzimuth, setSunAzimuth] = useState(0);\r\n  const [moonAzimuth, setMoonAzimuth] = useState(0);\r\n  const [sunTimes, setSunTimes] = useState({ \r\n    sunrise: null, \r\n    sunset: null \r\n  });\r\n  const [moonTimes, setMoonTimes] = useState({ \r\n    moonrise: null, \r\n    moonset: null \r\n  });\r\n  const [moonPhase, setMoonPhase] = useState({\r\n    fraction: 0,\r\n    phase: 0,\r\n    emoji: '🌑',\r\n    name: 'Lua Nova'\r\n  });\r\n  const [isDaytime, setIsDaytime] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!position) return;\r\n\r\n    const updateData = () => {\r\n      const now = new Date();\r\n      \r\n      // Sun data\r\n      const times = SunCalc.getTimes(now, position.lat, position.lng);\r\n      const sunPos = SunCalc.getPosition(now, position.lat, position.lng);\r\n      \r\n      setSunTimes({\r\n        sunrise: times.sunrise,\r\n        sunset: times.sunset\r\n      });\r\n      setIsDaytime(sunPos.altitude > 0);\r\n\r\n      // Moon data\r\n      const moonTimes = SunCalc.getMoonTimes(now, position.lat, position.lng);\r\n      setMoonTimes({\r\n        moonrise: moonTimes.rise,\r\n        moonset: moonTimes.set\r\n      });\r\n\r\n      const moonIllumination = SunCalc.getMoonIllumination(now);\r\n      setMoonPhase({\r\n        fraction: moonIllumination.fraction,\r\n        phase: moonIllumination.phase,\r\n        emoji: getMoonPhaseEmoji(moonIllumination.fraction),\r\n        name: getMoonPhaseName(moonIllumination.phase)\r\n      });\r\n    };\r\n\r\n    updateData();\r\n    const interval = setInterval(updateData, 60000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [position]);\r\n\r\n  useEffect(() => {\r\n    if (!position) return;\r\n\r\n    const updateAzimuths = () => {\r\n      setSunAzimuth(getCurrentSunAzimuth(position.lat, position.lng));\r\n      setMoonAzimuth(getCurrentMoonAzimuth(position.lat, position.lng));\r\n    };\r\n    \r\n    updateAzimuths();\r\n    const interval = setInterval(updateAzimuths, 60000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [position]);\r\n\r\n  return {\r\n    sunAzimuth,\r\n    moonAzimuth,\r\n    sunTimes,\r\n    moonTimes,\r\n    moonPhase,\r\n    isDaytime\r\n  };\r\n}","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './App.css';\r\nimport AppContainer from './components/Layout/AppContainer';\r\nimport CameraPreview from './components/Camera/CameraPreview';\r\nimport CameraControls from './components/Camera/CameraControls';\r\nimport PhotoPreview from './components/Camera/PhotoPreview';\r\nimport CelestialToggle from './components/Celestial/CelestialToggle';\r\nimport SunInfo from './components/Celestial/SunInfo';\r\nimport MoonInfo from './components/Celestial/MoonInfo';\r\nimport Compass from './components/Compass/Compass';\r\nimport ErrorBanner from './components/Layout/ErrorBanner';\r\nimport useGeolocation from './hooks/useGeolocation';\r\nimport useOrientation from './hooks/useOrientation';\r\nimport useCamera from './hooks/useCamera';\r\nimport useCelestialData from './hooks/useCelestialData';\r\nimport {\r\n  normalizeOrientation,\r\n  smoothAngle,\r\n  normalizeAngle,\r\n  calculateAngleDifference\r\n} from './utils/angleUtils';\r\n\r\n\r\n/**\r\n * Componente principal do aplicativo Guia Fotográfico do Pôr do Sol.\r\n * Gerencia:\r\n * - alização do usuário\r\n * - Cálculo da direção do sol\r\n * - Orientação do dispositivo\r\n * - Controle de câmera e captura de fotos\r\n * - Interface de bússola digital\r\n */\r\n\r\nconst App = () => {\r\n  const [celestialBody, setCelestialBody] = useState('sun'); // 'sun' ou 'moon'// \r\n  const [smoothedSunAngle, setSmoothedSunAngle] = useState(0);\r\n  const [smoothedMoonAngle, setSmoothedMoonAngle] = useState(0);\r\n\r\n  const { position, error: geoError } = useGeolocation();\r\n  const { deviceHeading, error: orientationError } = useOrientation();\r\n  const {\r\n    sunAzimuth,\r\n    moonAzimuth,\r\n    sunTimes,\r\n    moonTimes,\r\n    moonPhase,\r\n    isDaytime\r\n  } = useCelestialData(position);\r\n\r\n  const {\r\n    cameraActive,\r\n    setCameraActive,\r\n    photo,\r\n    setPhoto,\r\n    facingMode,\r\n    toggleCamera,\r\n    capturePhoto,\r\n    closeCamera,\r\n    videoRef,\r\n    canvasRef,\r\n    error: cameraError\r\n  } = useCamera();\r\n\r\n  const notificationTimeout = useRef(null);\r\n  // Estados para notificações\r\n  const [notificationPermission, setNotificationPermission] = useState('default');\r\n  const [notificationScheduled, setNotificationScheduled] = useState(false);\r\n  // ======================================================================\r\n  // EFEITOS PARA INICIALIZAÇÃO E GERENCIAMENTO DE RECURSOS\r\n  // ======================================================================\r\n\r\n  /**\r\n   * Efeito para obtenção da geolocalização do usuário.\r\n   * Executa apenas uma vez na montagem do componente.\r\n   */\r\n  // Solicitar permissão para notificações\r\n  useEffect(() => {\r\n    if ('Notification' in window) {\r\n      if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n        Notification.requestPermission().then(permission => {\r\n          setNotificationPermission(permission);\r\n        });\r\n      } else {\r\n        setNotificationPermission(Notification.permission);\r\n      }\r\n    }\r\n  }, []);\r\n  // Removido: Efeitos duplicados para cálculo da direção do sol/lua e horários, pois já são fornecidos pelo hook useCelestialData\r\n\r\n  /**\r\n * Efeito para controle da câmera.\r\n * Gerencia ciclo de vida do stream de vídeo:\r\n * - Inicia câmera quando cameraActive é true\r\n * - Para stream quando desativado ou ao desmontar\r\n * - Alterna entre câmeras quando facingMode muda\r\n */\r\n  // Agendar notificação quando os horários do sol mudarem\r\n  useEffect(() => {\r\n    if (sunTimes.sunset && notificationPermission === 'granted' && !notificationScheduled) {\r\n      scheduleSunsetNotification();\r\n    }\r\n  }, [sunTimes, notificationPermission, notificationScheduled]);\r\n\r\n  // Função para agendar notificação do pôr do sol\r\n  const scheduleSunsetNotification = useCallback(() => {\r\n    if (notificationTimeout.current) {\r\n      clearTimeout(notificationTimeout.current);\r\n    }\r\n\r\n    if (!sunTimes.sunset) return;\r\n\r\n    const notificationTime = new Date(sunTimes.sunset.getTime() - 15 * 60000);\r\n    const now = new Date();\r\n\r\n    if (notificationTime <= now) return;\r\n\r\n    const timeUntilNotification = notificationTime - now;\r\n\r\n    notificationTimeout.current = setTimeout(() => {\r\n      if (notificationPermission === 'granted') {\r\n        new Notification('O pôr do sol está próximo!', {\r\n          body: 'Faltam 15 minutos para o pôr do sol. Prepare-se para capturar uma foto perfeita!',\r\n          icon: '/sunset-icon.png'\r\n        });\r\n      }\r\n      setNotificationScheduled(false);\r\n    }, timeUntilNotification);\r\n\r\n    setNotificationScheduled(true);\r\n  }, [sunTimes, notificationPermission]);  \r\n\r\n  // Limpeza global\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n      // Limpar timeout ao desmontar\r\n      if (notificationTimeout.current) {\r\n        clearTimeout(notificationTimeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n\r\n  // Suaviza os ângulos de rotação\r\n  useEffect(() => {\r\n    if (sunAzimuth === null || moonAzimuth === null || deviceHeading === null) return;\r\n\r\n    const sunAngle = normalizeAngle(sunAzimuth - deviceHeading);\r\n    const moonAngle = normalizeAngle(moonAzimuth - deviceHeading);\r\n\r\n    setSmoothedSunAngle(prev => smoothAngle(prev, sunAngle, 0.2));\r\n    setSmoothedMoonAngle(prev => smoothAngle(prev, moonAngle, 0.2));\r\n  }, [sunAzimuth, moonAzimuth, deviceHeading]);\r\n\r\n  // Verificar alinhamento\r\n  const targetAzimuth = celestialBody === 'sun' ? sunAzimuth : moonAzimuth;\r\n  const isAligned = calculateAngleDifference(targetAzimuth, deviceHeading) < 15;\r\n\r\n  const errors = [geoError, orientationError, cameraError].filter(Boolean);\r\n\r\n\r\n\r\n  // ======================================================================\r\n  // RENDERIZAÇÃO DA INTERFACE\r\n  // ======================================================================\r\n\r\n  return (\r\n    <AppContainer isDaytime={isDaytime}>\r\n      <h1>{celestialBody === 'sun' ? '🌅 Localizando o Sol' : '🌙 Localizando a Lua'}</h1>\r\n\r\n      <CelestialToggle\r\n        celestialBody={celestialBody}\r\n        setCelestialBody={setCelestialBody}\r\n      />\r\n\r\n      {celestialBody === 'sun' ? (\r\n        <SunInfo sunTimes={sunTimes} />\r\n      ) : (\r\n        <MoonInfo moonTimes={moonTimes} moonPhase={moonPhase} />\r\n      )}\r\n\r\n      {/* Área da câmera */}\r\n      {cameraActive && (\r\n        <div className=\"camera-container\">\r\n          <CameraPreview\r\n            toggleCamera={toggleCamera}\r\n            videoRef={videoRef}\r\n            facingMode={facingMode}\r\n          />\r\n          <CameraControls\r\n            toggleCamera={toggleCamera}\r\n            capturePhoto={capturePhoto}\r\n            closeCamera={closeCamera}\r\n          />\r\n          {photo && (\r\n            <PhotoPreview\r\n              photo={photo}\r\n              closePreview={() => setPhoto(null)}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n       <Compass\r\n        celestialBody={celestialBody}\r\n        smoothedSunAngle={smoothedSunAngle}\r\n        smoothedMoonAngle={smoothedMoonAngle}\r\n        moonPhase={moonPhase}\r\n      />\r\n\r\n        {/* Botão para ativar câmera */}\r\n        {!cameraActive && (\r\n          <button\r\n            className=\"main-camera-btn\"\r\n            onClick={() => setCameraActive(true)}\r\n          >\r\n            📸 Ativar Câmera\r\n          </button>\r\n        )}\r\n\r\n        {/* Painel de informações */}\r\n        <div className=\"info-panel\">\r\n          <p>\r\n            🧭 Direção: {celestialBody === 'sun'\r\n              ? `${sunAzimuth ? sunAzimuth.toFixed(1) : '--'}° (Sol)`\r\n              : `${moonAzimuth ? moonAzimuth.toFixed(1) : '--'}° (Lua)`}\r\n          </p>\r\n          <div className={`alignment-feedback ${isAligned ? 'aligned' : ''}`}>\r\n            {isAligned\r\n              ? `⭐ ALINHADO COM ${celestialBody === 'sun' ? 'O SOL' : 'A LUA'}! ⭐`\r\n              : `Gire o dispositivo para ${celestialBody === 'sun' ? 'o Sol' : 'a Lua'}... ➡️`}\r\n          </div>\r\n        </div>\r\n\r\n        {errors.length > 0 && <ErrorBanner messages={errors} />}\r\n\r\n      {/* Canvas oculto para captura de fotos */}\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n)\r\n"],"names":["AppContainer","children","isDaytime","jsx","CameraPreview","videoRef","facingMode","CameraControls","toggleCamera","capturePhoto","closeCamera","jsxs","PhotoPreview","photo","closePreview","CelestialToggle","celestialBody","setCelestialBody","Fragment","formatTime","date","SunInfo","sunTimes","MoonPhase","moonPhase","MoonInfo","moonTimes","DirectionArrow","angle","isActive","indicator","className","Compass","smoothedSunAngle","smoothedMoonAngle","ErrorBanner","messages","message","index","useGeolocation","position","setPosition","useState","error","setError","useEffect","handleSuccess","pos","handleError","err","watchId","normalizeOrientation","alpha","normalizeAngle","smoothAngle","current","target","factor","diff","calculateAngleDifference","angle1","angle2","useOrientation","deviceHeading","setDeviceHeading","handleOrientation","event","useCamera","cameraActive","setCameraActive","setPhoto","setFacingMode","useRef","canvasRef","startCamera","useCallback","constraints","stream","_a","track","prev","video","canvas","ctx","getCurrentSunAzimuth","lat","lng","now","sunPos","SunCalc.getPosition","getCurrentMoonAzimuth","moonPos","SunCalc.getMoonPosition","getMoonPhaseEmoji","fraction","getMoonPhaseName","phase","useCelestialData","sunAzimuth","setSunAzimuth","moonAzimuth","setMoonAzimuth","setSunTimes","setMoonTimes","setMoonPhase","setIsDaytime","updateData","times","SunCalc.getTimes","SunCalc.getMoonTimes","moonIllumination","SunCalc.getMoonIllumination","interval","updateAzimuths","App","setSmoothedSunAngle","setSmoothedMoonAngle","geoError","orientationError","cameraError","notificationTimeout","notificationPermission","setNotificationPermission","notificationScheduled","setNotificationScheduled","permission","scheduleSunsetNotification","notificationTime","timeUntilNotification","sunAngle","moonAngle","isAligned","errors","createRoot","StrictMode"],"mappings":"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"}