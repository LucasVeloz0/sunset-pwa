{"version":3,"file":"index-Bbezwkoc.js","sources":["../../src/utils/sunUtils.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import * as SunCalc from 'suncalc'; // Adicione esta linha no topo\n\n/**\n * Calcula a dire√ß√£o do p√¥r do sol em graus\n * @param {number} lat - Latitude\n * @param {number} lng - Longitude\n * @returns {number} Azimute em graus (0 = Norte, 90 = Leste)\n */\nexport const getSunsetDirection = (lat, lng) => {\n  const now = new Date();\n  const sunsetTime = SunCalc.getTimes(now, lat, lng).sunset;\n  const sunPos = SunCalc.getPosition(sunsetTime, lat, lng);\n  return ((sunPos.azimuth * 180 / Math.PI) + 180) % 360;\n};\n\n/**\n * Normaliza a orienta√ß√£o do dispositivo\n * @param {number} alpha - √Çngulo da b√∫ssola (0-360)\n * @returns {number} √Çngulo ajustado\n */\nexport const normalizeOrientation = (alpha) => {\n  return (360 - alpha) % 360;\n};","import React, { useState, useEffect, useRef } from 'react';\nimport * as SunCalc from 'suncalc';\nimport { getSunsetDirection, normalizeOrientation } from './utils/sunUtils';\nimport './App.css';\n\nconst App = () => {\n  const [position, setPosition] = useState(null);\n  const [sunAzimuth, setSunAzimuth] = useState(0);\n  const [deviceHeading, setDeviceHeading] = useState(0);\n  const [error, setError] = useState(null);\n  const [cameraActive, setCameraActive] = useState(false);\n\n  // 1. Obter geolocaliza√ß√£o\n  useEffect(() => {\n    const handleSuccess = (pos) => {\n      setPosition({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n    };\n\n    const handleError = (err) => {\n      setError(err.message || 'Erro ao obter localiza√ß√£o');\n    };\n\n    if (!navigator.geolocation) {\n      setError('Geolocaliza√ß√£o n√£o suportada');\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\n      enableHighAccuracy: true,\n      timeout: 5000\n    });\n  }, []);\n\n  // 2. Calcular dire√ß√£o do sol\n  useEffect(() => {\n    if (position) {\n      const azimuth = getSunsetDirection(position.lat, position.lng);\n      setSunAzimuth(azimuth);\n    }\n  }, [position]);\n\n  // 3. Configurar sensor de orienta√ß√£o\n  useEffect(() => {\n    const handleOrientation = (event) => {\n      if (event.alpha !== null) {\n        let alpha = event.alpha;\n        if (typeof event.webkitCompassHeading !== 'undefined') {\n          alpha = event.webkitCompassHeading;\n        }\n        setDeviceHeading(normalizeOrientation(alpha));\n      }\n    };\n\n    window.addEventListener('deviceorientation', handleOrientation, true);\n    \n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation);\n    };\n  }, []);\n\n  // 4. Abrir aplicativo de c√¢mera\n  const handleOpenCamera = () => {\n    if (/android/i.test(navigator.userAgent)) {\n      window.location.href = 'intent://media/scanner#Intent;package=com.android.camera;end';\n    } else {\n      alert('Abra o aplicativo de c√¢mera e aponte na dire√ß√£o indicada!');\n      setCameraActive(true);\n    }\n  };\n\n  // 5. Calcular √¢ngulo relativo\n  const calculateRelativeAngle = () => {\n    return (sunAzimuth - deviceHeading + 360) % 360;\n  };\n\n  // 6. Verificar alinhamento\n  const isAligned = Math.abs(calculateRelativeAngle()) < 5;\n\n  return (\n    <div className=\"app-container\">\n      <h1>üåÖ Guia do P√¥r do Sol</h1>\n      \n      <button \n        className={`camera-button ${cameraActive ? 'active' : ''}`}\n        onClick={handleOpenCamera}\n      >\n        üì∏ Abrir C√¢mera\n      </button>\n\n      {error && <div className=\"error-banner\">{error}</div>}\n\n      <div className=\"compass-wrapper\">\n        <div className=\"compass\">\n          <div \n            className=\"direction-arrow\"\n            style={{ transform: `rotate(${calculateRelativeAngle()}deg)` }}\n          >\n            <div className=\"sun-indicator\">‚òÄÔ∏è</div>\n          </div>\n          <div className=\"alignment-marker\"></div>\n        </div>\n\n        <div className=\"info-panel\">\n          <p>‚è± Hor√°rio do p√¥r do sol: {\n            position && \n            new Date(SunCalc.getTimes(new Date(), position.lat, position.lng).sunset)\n              .toLocaleTimeString()\n          }</p>\n          <p>üß≠ Dire√ß√£o: {sunAzimuth.toFixed(1)}¬∞</p>\n          <div className={`alignment-feedback ${isAligned ? 'aligned' : ''}`}>\n            {isAligned ? '‚≠ê ALINHADO! ‚≠ê' : 'Gire o dispositivo... ‚û°Ô∏è'}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["getSunsetDirection","lat","lng","now","sunsetTime","SunCalc.getTimes","SunCalc.getPosition","normalizeOrientation","alpha","App","position","setPosition","useState","sunAzimuth","setSunAzimuth","deviceHeading","setDeviceHeading","error","setError","cameraActive","setCameraActive","useEffect","handleSuccess","pos","handleError","err","azimuth","handleOrientation","event","handleOpenCamera","calculateRelativeAngle","isAligned","jsxs","jsx","createRoot","StrictMode"],"mappings":"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"}