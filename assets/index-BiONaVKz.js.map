{"version":3,"file":"index-BiONaVKz.js","sources":["../../src/utils/sunUtils.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import * as SunCalc from 'suncalc'; // Adicione esta linha no topo\r\n\r\n/**\r\n * Calcula a direção do pôr do sol em graus\r\n * @param {number} lat - Latitude\r\n * @param {number} lng - Longitude\r\n * @returns {number} Azimute em graus (0 = Norte, 90 = Leste)\r\n */\r\nexport const getSunsetDirection = (lat, lng) => {\r\n  const now = new Date();\r\n  const sunsetTime = SunCalc.getTimes(now, lat, lng).sunset;\r\n  const sunPos = SunCalc.getPosition(sunsetTime, lat, lng);\r\n    // Converte radianos para graus e normaliza para 0-360\r\n  return ((sunPos.azimuth * 180 / Math.PI) + 180) % 360;\r\n};\r\n\r\n/**\r\n * Normaliza a orientação do dispositivo\r\n * @param {number} alpha - Ângulo da bússola (0-360)\r\n * @returns {number} Ângulo ajustado\r\n */\r\nexport const normalizeOrientation = (alpha) => {\r\n  return (360 - alpha) % 360;\r\n};\r\n\r\n/**\r\n * Normaliza um ângulo para o intervalo [-180, 180]\r\n * Isso permite transições suaves através do ponto 0/360\r\n */\r\nexport const normalizeAngle = (angle) => {\r\n  angle = angle % 360;\r\n  if (angle > 180) {\r\n    angle -= 360;\r\n  }\r\n  if (angle < -180) {\r\n    angle += 360;\r\n  }\r\n  return angle;\r\n};\r\n\r\n/**\r\n * Calcula a diferença angular mais curta entre dois ângulos\r\n */\r\nexport const shortestAngleDiff = (target, current) => {\r\n  const diff = normalizeAngle(target - current);\r\n  return diff;\r\n};\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport * as SunCalc from 'suncalc';\r\nimport { getSunsetDirection, normalizeOrientation } from './utils/sunUtils';\r\nimport './App.css';\r\n\r\n\r\n/**\r\n * Componente principal do aplicativo Guia Fotográfico do Pôr do Sol.\r\n * Gerencia:\r\n * - Geolocalização do usuário\r\n * - Cálculo da direção do sol\r\n * - Orientação do dispositivo\r\n * - Controle de câmera e captura de fotos\r\n * - Interface de bússola digital\r\n */\r\n\r\nconst App = () => {\r\n  // Estados do aplicativo\r\n  const [position, setPosition] = useState(null);\r\n  const [sunAzimuth, setSunAzimuth] = useState(0);\r\n  const [deviceHeading, setDeviceHeading] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [photo, setPhoto] = useState(null);\r\n  const [facingMode, setFacingMode] = useState('environment');\r\n  const [isDaytime, setIsDaytime] = useState(false);\r\n  const [sunTimes, setSunTimes] = useState({ \r\n    sunrise: null, \r\n    sunset: null, \r\n    solarNoon: null \r\n  });\r\n\r\n  // Referências para elementos DOM\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const notificationTimeout = useRef(null);\r\n\r\n  // Estados para notificações\r\n  const [notificationPermission, setNotificationPermission] = useState('default');\r\n  const [notificationScheduled, setNotificationScheduled] = useState(false);\r\n\r\n  // ======================================================================\r\n  // EFEITOS PARA INICIALIZAÇÃO E GERENCIAMENTO DE RECURSOS\r\n  // ======================================================================\r\n\r\n  /**\r\n   * Efeito para obtenção da geolocalização do usuário.\r\n   * Executa apenas uma vez na montagem do componente.\r\n   */  \r\n  // Solicitar permissão para notificações\r\n  useEffect(() => {\r\n    if ('Notification' in window) {\r\n      if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n        Notification.requestPermission().then(permission => {\r\n          setNotificationPermission(permission);\r\n        });\r\n      } else {\r\n        setNotificationPermission(Notification.permission);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Obter geolocalização do usuário\r\n  useEffect(() => {\r\n    const handleSuccess = (pos) => {\r\n      setPosition({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude\r\n      });\r\n    };\r\n\r\n    const handleError = (err) => {\r\n      setError(err.message || 'Erro ao obter localização');\r\n    };\r\n\r\n    // Verifica suporte a geolocalização\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocalização não suportada');\r\n      return;\r\n    }\r\n\r\n    // Solicita localização com alta precisão\r\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Efeito para cálculo da direção do sol.\r\n   * Executa sempre que a posição do usuário muda.\r\n   */\r\n  // Calcular direção do sol\r\n  useEffect(() => {\r\n    if (position) {\r\n      // Calcula o azimute do pôr do sol usando a biblioteca SunCalc\r\n      const azimuth = getSunsetDirection(position.lat, position.lng);\r\n      setSunAzimuth(azimuth);\r\n    }\r\n  }, [position]);\r\n  /**\r\n   * Efeito para configuração do sensor de orientação.\r\n   * Adiciona listener para eventos de orientação do dispositivo.\r\n   */\r\n\r\n  // Configurar sensor de orientação\r\n  useEffect(() => {\r\n    const handleOrientation = (event) => {\r\n      if (event.alpha !== null) {\r\n        let alpha = event.alpha;\r\n        // Tratamento especial para iOS (webkitCompassHeading)\r\n        if (typeof event.webkitCompassHeading !== 'undefined') {\r\n          alpha = event.webkitCompassHeading;\r\n        }\r\n\r\n        // Normaliza e atualiza a direção do dispositivo\r\n        setDeviceHeading(normalizeOrientation(alpha));\r\n      }\r\n    };\r\n\r\n    // Verifica suporte ao sensor\r\n    if (window.DeviceOrientationEvent) {\r\n      window.addEventListener('deviceorientation', handleOrientation, true);\r\n    } else {\r\n      setError('Sensor de orientação não suportado neste dispositivo');\r\n    }\r\n    \r\n    return () => {\r\n      window.removeEventListener('deviceorientation', handleOrientation);\r\n    };\r\n  }, []);\r\n\r\n  // Verificar se é dia ou noite e calcular horários do sol\r\n  useEffect(() => {\r\n    if (position) {\r\n      const updateSunData = () => {\r\n        const now = new Date();\r\n        const times = SunCalc.getTimes(now, position.lat, position.lng);\r\n        const sunPos = SunCalc.getPosition(now, position.lat, position.lng);\r\n        \r\n        setSunTimes({\r\n          sunrise: times.sunrise,\r\n          sunset: times.sunset,\r\n          solarNoon: times.solarNoon\r\n        });\r\n        setIsDaytime(sunPos.altitude > 0);\r\n      };\r\n      \r\n      updateSunData();\r\n      const interval = setInterval(updateSunData, 60000);\r\n      \r\n      return () => {\r\n        clearInterval(interval);\r\n        // Limpar timeout ao desmontar\r\n        if (notificationTimeout.current) {\r\n          clearTimeout(notificationTimeout.current);\r\n        }\r\n      };\r\n    }\r\n  }, [position]);\r\n\r\n    /**\r\n   * Efeito para controle da câmera.\r\n   * Gerencia ciclo de vida do stream de vídeo:\r\n   * - Inicia câmera quando cameraActive é true\r\n   * - Para stream quando desativado ou ao desmontar\r\n   * - Alterna entre câmeras quando facingMode muda\r\n   */\r\n  // Agendar notificação quando os horários do sol mudarem\r\n  useEffect(() => {\r\n    if (sunTimes.sunset && notificationPermission === 'granted' && !notificationScheduled) {\r\n      scheduleSunsetNotification();\r\n    }\r\n  }, [sunTimes, notificationPermission, notificationScheduled]);\r\n\r\n  // Função para agendar notificação do pôr do sol\r\n  const scheduleSunsetNotification = useCallback(() => {\r\n    // Limpar notificações anteriores\r\n    if (notificationTimeout.current) {\r\n      clearTimeout(notificationTimeout.current);\r\n    }\r\n    \r\n    if (!sunTimes.sunset) return;\r\n\r\n    // Calcular 15 minutos antes do pôr do sol\r\n    const notificationTime = new Date(sunTimes.sunset.getTime() - 15 * 60000);\r\n    const now = new Date();\r\n    \r\n    // Verificar se o horário ainda não passou\r\n    if (notificationTime <= now) return;\r\n    \r\n    const timeUntilNotification = notificationTime - now;\r\n    \r\n    notificationTimeout.current = setTimeout(() => {\r\n      if (notificationPermission === 'granted') {\r\n        new Notification('O pôr do sol está próximo!', {\r\n          body: 'Faltam 15 minutos para o pôr do sol. Prepare-se para capturar uma foto perfeita!',\r\n          icon: '/sunset-icon.png'\r\n        });\r\n      }\r\n      // Resetar estado para permitir novo agendamento\r\n      setNotificationScheduled(false);\r\n    }, timeUntilNotification);\r\n    \r\n    setNotificationScheduled(true);\r\n  }, [sunTimes, notificationPermission]);\r\n\r\n  // Controle da câmera\r\n  useEffect(() => {\r\n    let stream = null;\r\n    \r\n    const startCamera = async () => {\r\n      try {\r\n        // Evita múltiplas inicializações\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          return;\r\n        }\r\n        \r\n        // Configurações da câmera\r\n        const constraints = {\r\n          video: { \r\n            facingMode: facingMode,\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 }\r\n          }\r\n        };\r\n\r\n        // Antes de pedir novo stream, pare o anterior se existir\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n          videoRef.current.srcObject = null;\r\n        }\r\n        // Agora peça o novo stream normalmente\r\n\r\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        // Configura elemento de vídeo        \r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current.play().catch(err => {\r\n              setError('Erro ao reproduzir vídeo: ' + err.message);\r\n            });\r\n          };\r\n        }\r\n      } catch (err) {\r\n        setError('Erro ao acessar câmera: ' + err.message);\r\n        setCameraActive(false);\r\n      }\r\n    };\r\n\r\n    // Inicia câmera se estiver ativa    \r\n    if (cameraActive) {\r\n      startCamera();\r\n    }\r\n\r\n    // Limpeza: para todos os tracks ao desmontar ou mudar dependências\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [cameraActive, facingMode]);\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CONTROLE DA CÂMERA\r\n  // ======================================================================\r\n\r\n  /** Alterna entre câmeras frontal e traseira */\r\n  const toggleCamera = () => {\r\n    setFacingMode(prev => prev === 'user' ? 'environment' : 'user');\r\n  };\r\n\r\n  /** Captura uma foto do vídeo atual e gera data URL */  \r\n  const capturePhoto = () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    \r\n    // Verifica se o vídeo está pronto    \r\n    if (video && canvas && video.readyState >= 2) {\r\n      // Configura canvas com dimensões do vídeo      \r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Aplica flip horizontal apenas para câmera frontal      \r\n      if (facingMode === 'user') {\r\n        ctx.translate(canvas.width, 0);\r\n        ctx.scale(-1, 1);\r\n      }\r\n      \r\n      // Captura frame atual do vídeo      \r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      // Gera URL da imagem e atualiza estado      \r\n      setPhoto(canvas.toDataURL('image/jpeg', 0.9));\r\n    }\r\n  };\r\n\r\n  /** Fecha a câmera e libera recursos */  \r\n  const closeCamera = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      // Para todos os tracks de mídia\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null; \r\n    }\r\n    setCameraActive(false);\r\n    setPhoto(null);\r\n  };\r\n\r\n  // Limpeza global\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n      // Limpar timeout ao desmontar\r\n      if (notificationTimeout.current) {\r\n        clearTimeout(notificationTimeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CÁLCULO E RENDERIZAÇÃO\r\n  // ======================================================================\r\n\r\n  /** \r\n   * Calcula ângulo relativo entre direção do sol e dispositivo \r\n   * @ returns number Ângulo em graus 0-360\r\n    */\r\n  const calculateRelativeAngle = () => {\r\n    let relativeAngle = (sunAzimuth - deviceHeading + 360) % 360;\r\n  \r\n  // Suaviza a transição quando passa pelo ponto 0/360\r\n    if (relativeAngle > 180) {\r\n      relativeAngle -= 360;\r\n    }\r\n    return relativeAngle;\r\n  };\r\n\r\n  /** Verifica se dispositivo está alinhado com o sol (margem de 15 graus) */  \r\n  const isAligned = Math.abs(calculateRelativeAngle()) < 15;\r\n\r\n  // ======================================================================\r\n  // RENDERIZAÇÃO DA INTERFACE\r\n  // ======================================================================\r\n\r\n  return (\r\n    <div className={`app-container ${isDaytime ? 'day-theme' : 'night-theme'}`}>\r\n      <h1>🌅 Localizando o Pôr do Sol</h1>\r\n          {/* Seção de informações solares */}\r\n      \r\n      <div className=\"sun-info\">\r\n        <div className=\"info-card\">\r\n          <span>☀️ Nascer do sol</span>\r\n          <strong>{formatTime(sunTimes?.sunrise)}</strong>\r\n        </div>\r\n        <div className=\"info-card\">\r\n          <span>🌇 Pôr do sol</span>\r\n          <strong>{formatTime(sunTimes?.sunset)}</strong>\r\n        </div>\r\n      </div>\r\n      {/* Área da câmera */}\r\n      \r\n      {cameraActive && (\r\n        <div className=\"camera-container\">\r\n          <video\r\n            ref={videoRef}\r\n            className={`camera-preview${facingMode === 'user' ? ' mirrored' : ''}`}\r\n            playsInline\r\n            muted\r\n          />\r\n\r\n          <div className=\"camera-controls\">\r\n            <button className=\"camera-btn\" onClick={toggleCamera} aria-label=\"Alternar câmera\">\r\n              🔄\r\n            </button>\r\n            <button className=\"camera-btn capture-btn\" onClick={capturePhoto} aria-label=\"Capturar foto\">\r\n              ⭕\r\n            </button>\r\n            <button className=\"camera-btn\" onClick={closeCamera} aria-label=\"Fechar câmera\">\r\n              ✖\r\n            </button>\r\n          </div>\r\n\r\n          {photo && (\r\n            <div className=\"photo-preview\">\r\n              <img src={photo} alt=\"Foto capturada\" />\r\n              <a \r\n                href={photo} \r\n                download={`por-do-sol-${Date.now()}.jpg`}\r\n                className=\"download-button\"\r\n              >\r\n                ⬇️ Baixar\r\n              </a>\r\n              <button onClick={() => setPhoto(null)} className=\"close-button\">\r\n                ❌ Fechar\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Bússola digital e informações */}\r\n      <div className=\"compass-wrapper\">\r\n        <div className=\"compass\">\r\n          {/* Seta direcional que aponta para o sol */}          \r\n          <div \r\n            className=\"direction-arrow\" \r\n            style={{ transform: `rotate(${calculateRelativeAngle()}deg)` }}\r\n          >\r\n            <div className=\"sun-indicator\">☀️</div>\r\n          </div>\r\n          {/* Marcador de alinhamento */}          \r\n          <div className=\"alignment-marker\"></div>\r\n        </div>\r\n\r\n        {/* Botão para ativar câmera */}\r\n        {!cameraActive && (\r\n          <button \r\n            className=\"main-camera-btn\"\r\n            onClick={() => setCameraActive(true)}\r\n          >\r\n            📸 Ativar Câmera\r\n          </button>\r\n        )}\r\n\r\n        {/* Painel de informações */}\r\n        <div className=\"info-panel\">\r\n         \r\n          {/* Direção do sol */}          \r\n          <p>🧭 Direção: {sunAzimuth.toFixed(1)}°</p>\r\n          {/* Feedback de alinhamento */}          \r\n          <div className={`alignment-feedback ${isAligned ? 'aligned' : ''}`}>\r\n            {isAligned ? '⭐ ALINHADO! ⭐' : 'Gire o dispositivo... ➡️'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Exibição de erros */}\r\n      {error && <div className=\"error-banner\">{error}</div>}\r\n      \r\n      {/* Canvas oculto para captura de fotos */}      \r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Função utilitária para formatar horários\r\nfunction formatTime(date) {\r\n  if (!date) return '--:--';\r\n  const d = new Date(date);\r\n  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\nexport default App;","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n)\r\n"],"names":["getSunsetDirection","lat","lng","now","sunsetTime","SunCalc.getTimes","SunCalc.getPosition","normalizeOrientation","alpha","App","position","setPosition","useState","sunAzimuth","setSunAzimuth","deviceHeading","setDeviceHeading","error","setError","cameraActive","setCameraActive","photo","setPhoto","facingMode","setFacingMode","isDaytime","setIsDaytime","sunTimes","setSunTimes","videoRef","useRef","canvasRef","notificationTimeout","notificationPermission","setNotificationPermission","notificationScheduled","setNotificationScheduled","useEffect","permission","handleSuccess","pos","handleError","err","azimuth","handleOrientation","event","updateSunData","times","sunPos","interval","scheduleSunsetNotification","useCallback","notificationTime","timeUntilNotification","stream","constraints","track","toggleCamera","prev","capturePhoto","video","canvas","ctx","closeCamera","_a","calculateRelativeAngle","relativeAngle","isAligned","jsx","jsxs","formatTime","date","createRoot","StrictMode"],"mappings":"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"}