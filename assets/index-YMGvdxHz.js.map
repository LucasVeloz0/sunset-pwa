{"version":3,"file":"index-YMGvdxHz.js","sources":["../../src/utils/sunUtils.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import * as SunCalc from 'suncalc';\r\n\r\n/**\r\n * Obtém o azimute atual do sol em graus (0 a 360)\r\n */\r\nexport const getCurrentSunAzimuth = (lat, lng) => {\r\n  const now = new Date();\r\n  const sunPos = SunCalc.getPosition(now, lat, lng);\r\n  return ((sunPos.azimuth * 180 / Math.PI) + 180) % 360;\r\n};\r\n\r\n/**\r\n * Obtém o azimute atual da lua em graus (0 a 360)\r\n */\r\nexport const getCurrentMoonAzimuth = (lat, lng) => {\r\n  const now = new Date();\r\n  const moonPos = SunCalc.getMoonPosition(now, lat, lng);\r\n  return ((moonPos.azimuth * 180 / Math.PI) + 180) % 360;\r\n};\r\n\r\nexport const normalizeOrientation = (alpha) => {\r\n  return (360 - alpha) % 360;\r\n};\r\n\r\nexport const smoothAngle = (previous, current, factor) => {\r\n  let diff = current - previous;\r\n  \r\n  // Ajusta para o menor caminho circular\r\n  if (diff > 180) diff -= 360;\r\n  if (diff < -180) diff += 360;\r\n  \r\n  return previous + diff * factor;\r\n};\r\n\r\n/**\r\n * Normaliza um ângulo para o intervalo [-180, 180]\r\n */\r\nexport const normalizeAngle = (angle) => {\r\n  angle = angle % 360;\r\n  if (angle > 180) angle -= 360;\r\n  if (angle < -180) angle += 360;\r\n  return angle;\r\n};","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport * as SunCalc from 'suncalc';\r\nimport { getCurrentSunAzimuth, getCurrentMoonAzimuth, normalizeOrientation, smoothAngle, normalizeAngle } from './utils/sunUtils';\r\nimport './App.css';\r\n\r\n\r\n/**\r\n * Componente principal do aplicativo Guia Fotográfico do Pôr do Sol.\r\n * Gerencia:\r\n * - Geolocalização do usuário\r\n * - Cálculo da direção do sol\r\n * - Orientação do dispositivo\r\n * - Controle de câmera e captura de fotos\r\n * - Interface de bússola digital\r\n */\r\n\r\nconst App = () => {\r\n  // Estados do aplicativo\r\n  const [position, setPosition] = useState(null);\r\n  const [sunAzimuth, setSunAzimuth] = useState(0);\r\n  const [deviceHeading, setDeviceHeading] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [photo, setPhoto] = useState(null);\r\n  const [facingMode, setFacingMode] = useState('environment');\r\n  const [isDaytime, setIsDaytime] = useState(false);\r\n  const [sunTimes, setSunTimes] = useState({ \r\n    sunrise: null, \r\n    sunset: null, \r\n    solarNoon: null \r\n  });\r\n  const [celestialBody, setCelestialBody] = useState('sun'); // 'sun' ou 'moon'\r\n  const [moonAzimuth, setMoonAzimuth] = useState(0);\r\n  const [moonTimes, setMoonTimes] = useState({ \r\n    moonrise: null, \r\n    moonset: null \r\n  });\r\n\r\n  const [moonPhase, setMoonPhase] = useState({\r\n    fraction: 0,\r\n    phase: 0,\r\n    emoji: '🌑'\r\n  });\r\n\r\n  // Referências para elementos DOM\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const notificationTimeout = useRef(null);\r\n\r\n  // Estados para notificações\r\n  const [notificationPermission, setNotificationPermission] = useState('default');\r\n  const [notificationScheduled, setNotificationScheduled] = useState(false);\r\n\r\n    // Novos estados para suavização\r\nconst [smoothedSunAngle, setSmoothedSunAngle] = useState(deviceHeading || 0);\r\nconst [smoothedMoonAngle, setSmoothedMoonAngle] = useState(deviceHeading || 0);\r\n\r\n    // ======================================================================\r\n  // FUNÇÕES UTILITÁRIAS PARA A LUA\r\n  // ======================================================================\r\n  \r\n  /**\r\n   * Determina o emoji da fase lunar com base na fração iluminada\r\n   * @param {number} fraction - Fração iluminada (0 a 1)\r\n   * @returns {string} Emoji representando a fase lunar\r\n   */\r\n  const getMoonPhaseEmoji = (fraction) => {\r\n    if (fraction === 0) return '🌑';         // Lua nova\r\n    if (fraction < 0.25) return '🌒';        // Crescente inicial\r\n    if (fraction < 0.5) return '🌓';         // Quarto crescente\r\n    if (fraction < 0.75) return '🌔';        // Gibosa crescente\r\n    if (fraction === 1) return '🌕';         // Lua cheia\r\n    if (fraction > 0.75) return '🌖';        // Gibosa minguante\r\n    if (fraction > 0.5) return '🌗';         // Quarto minguante\r\n    return '🌘';                             // Minguante final\r\n  };\r\n\r\n  /**\r\n   * Obtém o nome da fase lunar com base no valor da fase\r\n   * @param {number} phase - Valor da fase (0 a 1)\r\n   * @returns {string} Nome da fase lunar\r\n   */\r\n  const getMoonPhaseName = (phase) => {\r\n    if (phase === 0 || phase === 1) return 'Lua Nova';\r\n    if (phase < 0.25) return 'Crescente Inicial';\r\n    if (phase === 0.25) return 'Quarto Crescente';\r\n    if (phase < 0.5) return 'Gibosa Crescente';\r\n    if (phase === 0.5) return 'Lua Cheia';\r\n    if (phase < 0.75) return 'Gibosa Minguante';\r\n    if (phase === 0.75) return 'Quarto Minguante';\r\n    return 'Minguante Final';\r\n  };\r\n\r\n  // ======================================================================\r\n  // EFEITOS PARA INICIALIZAÇÃO E GERENCIAMENTO DE RECURSOS\r\n  // ======================================================================\r\n\r\n  /**\r\n   * Efeito para obtenção da geolocalização do usuário.\r\n   * Executa apenas uma vez na montagem do componente.\r\n   */  \r\n  // Solicitar permissão para notificações\r\n  useEffect(() => {\r\n    if ('Notification' in window) {\r\n      if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n        Notification.requestPermission().then(permission => {\r\n          setNotificationPermission(permission);\r\n        });\r\n      } else {\r\n        setNotificationPermission(Notification.permission);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Obter geolocalização do usuário\r\n  useEffect(() => {\r\n    const handleSuccess = (pos) => {\r\n      setPosition({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude\r\n      });\r\n    };\r\n\r\n    const handleError = (err) => {\r\n      setError(err.message || 'Erro ao obter localização');\r\n    };\r\n\r\n    // Verifica suporte a geolocalização\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocalização não suportada');\r\n      return;\r\n    }\r\n\r\n    // Solicita localização com alta precisão\r\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000\r\n    });\r\n\r\n        // Configurar atualização contínua\r\n    const watchId = navigator.geolocation.watchPosition(\r\n      handleSuccess,\r\n      handleError,\r\n      { enableHighAccuracy: true, timeout: 10000 }\r\n    );\r\n\r\n    return () => {\r\n      navigator.geolocation.clearWatch(watchId);\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * Efeito para cálculo da direção do sol.\r\n   * Executa sempre que a posição do usuário muda.\r\n   */\r\n/**\r\n   * Efeito para cálculo da direção do sol E DA LUA\r\n   */\r\n  useEffect(() => {\r\n    if (position) {\r\n      const updateAzimuths = () => {\r\n        // Calcular azimute do sol\r\n        const sunAzimuth = getCurrentSunAzimuth(position.lat, position.lng);\r\n        setSunAzimuth(sunAzimuth);\r\n\r\n        // Calcular azimute da lua\r\n        const moonAzimuth = getCurrentMoonAzimuth(position.lat, position.lng);\r\n        setMoonAzimuth(moonAzimuth);\r\n      };\r\n      \r\n      updateAzimuths();\r\n      const interval = setInterval(updateAzimuths, 60000);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [position]);\r\n  /**\r\n   * Efeito para configuração do sensor de orientação.\r\n   * Adiciona listener para eventos de orientação do dispositivo.\r\n   */\r\n\r\n  // Configurar sensor de orientação\r\n  useEffect(() => {\r\n    const handleOrientation = (event) => {\r\n      if (event.alpha !== null) {\r\n        let alpha = event.alpha;\r\n        // Tratamento especial para iOS (webkitCompassHeading)\r\n        if (typeof event.webkitCompassHeading !== 'undefined') {\r\n          alpha = event.webkitCompassHeading;\r\n        }\r\n\r\n        // Normaliza e atualiza a direção do dispositivo\r\n        setDeviceHeading(normalizeOrientation(alpha));\r\n      }\r\n    };\r\n\r\n    // Verifica suporte ao sensor\r\n    if (window.DeviceOrientationEvent) {\r\n      window.addEventListener('deviceorientation', handleOrientation, true);\r\n    } else {\r\n      setError('Sensor de orientação não suportado neste dispositivo');\r\n    }\r\n    \r\n    return () => {\r\n      window.removeEventListener('deviceorientation', handleOrientation);\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * Efeito para cálculo dos horários do sol E DA LUA\r\n   */\r\n  useEffect(() => {\r\n    if (position) {\r\n      const updateCelestialData = () => {\r\n        const now = new Date();\r\n        \r\n        // Dados do sol\r\n        const times = SunCalc.getTimes(now, position.lat, position.lng);\r\n        const sunPos = SunCalc.getPosition(now, position.lat, position.lng);\r\n        \r\n        setSunTimes({\r\n          sunrise: times.sunrise,\r\n          sunset: times.sunset,\r\n          solarNoon: times.solarNoon\r\n        });\r\n        setIsDaytime(sunPos.altitude > 0);\r\n\r\n        // Dados da lua\r\n        const moonTimes = SunCalc.getMoonTimes(now, position.lat, position.lng);\r\n        setMoonTimes({\r\n          moonrise: moonTimes.rise,\r\n          moonset: moonTimes.set\r\n        });\r\n\r\n        const moonIllumination = SunCalc.getMoonIllumination(now);\r\n        setMoonPhase({\r\n          fraction: moonIllumination.fraction,\r\n          phase: moonIllumination.phase,\r\n          emoji: getMoonPhaseEmoji(moonIllumination.fraction),\r\n          name: getMoonPhaseName(moonIllumination.phase)\r\n        });\r\n      };\r\n      \r\n      updateCelestialData();\r\n      const interval = setInterval(updateCelestialData, 60000);\r\n      \r\n      return () => {\r\n        clearInterval(interval);\r\n        if (notificationTimeout.current) {\r\n          clearTimeout(notificationTimeout.current);\r\n        }\r\n      };\r\n    }\r\n  }, [position]);\r\n\r\n    /**\r\n   * Efeito para controle da câmera.\r\n   * Gerencia ciclo de vida do stream de vídeo:\r\n   * - Inicia câmera quando cameraActive é true\r\n   * - Para stream quando desativado ou ao desmontar\r\n   * - Alterna entre câmeras quando facingMode muda\r\n   */\r\n  // Agendar notificação quando os horários do sol mudarem\r\n  useEffect(() => {\r\n    if (sunTimes.sunset && notificationPermission === 'granted' && !notificationScheduled) {\r\n      scheduleSunsetNotification();\r\n    }\r\n  }, [sunTimes, notificationPermission, notificationScheduled]);\r\n\r\n    // Função para agendar notificação do pôr do sol\r\n  const scheduleSunsetNotification = useCallback(() => {\r\n    if (notificationTimeout.current) {\r\n      clearTimeout(notificationTimeout.current);\r\n    }\r\n    \r\n    if (!sunTimes.sunset) return;\r\n\r\n    const notificationTime = new Date(sunTimes.sunset.getTime() - 15 * 60000);\r\n    const now = new Date();\r\n    \r\n    if (notificationTime <= now) return;\r\n    \r\n    const timeUntilNotification = notificationTime - now;\r\n    \r\n    notificationTimeout.current = setTimeout(() => {\r\n      if (notificationPermission === 'granted') {\r\n        new Notification('O pôr do sol está próximo!', {\r\n          body: 'Faltam 15 minutos para o pôr do sol. Prepare-se para capturar uma foto perfeita!',\r\n          icon: '/sunset-icon.png'\r\n        });\r\n      }\r\n      setNotificationScheduled(false);\r\n    }, timeUntilNotification);\r\n    \r\n    setNotificationScheduled(true);\r\n  }, [sunTimes, notificationPermission]);\r\n\r\n  // Controle da câmera\r\n  useEffect(() => {\r\n    let stream = null;\r\n    \r\n    const startCamera = async () => {\r\n      try {\r\n        // Evita múltiplas inicializações\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          return;\r\n        }\r\n        \r\n        // Configurações da câmera\r\n        const constraints = {\r\n          video: { \r\n            facingMode: facingMode,\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 }\r\n          }\r\n        };\r\n\r\n        // Antes de pedir novo stream, pare o anterior se existir\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n          videoRef.current.srcObject = null;\r\n        }\r\n        // Agora peça o novo stream normalmente\r\n\r\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        // Configura elemento de vídeo        \r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current.play().catch(err => {\r\n              setError('Erro ao reproduzir vídeo: ' + err.message);\r\n            });\r\n          };\r\n        }\r\n      } catch (err) {\r\n        setError('Erro ao acessar câmera: ' + err.message);\r\n        setCameraActive(false);\r\n      }\r\n    };\r\n\r\n    // Inicia câmera se estiver ativa    \r\n    if (cameraActive) {\r\n      startCamera();\r\n    }\r\n\r\n    // Limpeza: para todos os tracks ao desmontar ou mudar dependências\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [cameraActive, facingMode]);\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CONTROLE DA CÂMERA\r\n  // ======================================================================\r\n\r\n  /** Alterna entre câmeras frontal e traseira */\r\n  const toggleCamera = () => {\r\n    setFacingMode(prev => prev === 'user' ? 'environment' : 'user');\r\n  };\r\n\r\n  /** Captura uma foto do vídeo atual e gera data URL */  \r\n  const capturePhoto = () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    \r\n    // Verifica se o vídeo está pronto    \r\n    if (video && canvas && video.readyState >= 2) {\r\n      // Configura canvas com dimensões do vídeo      \r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Aplica flip horizontal apenas para câmera frontal      \r\n      if (facingMode === 'user') {\r\n        ctx.translate(canvas.width, 0);\r\n        ctx.scale(-1, 1);\r\n      }\r\n      \r\n      // Captura frame atual do vídeo      \r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      // Gera URL da imagem e atualiza estado      \r\n      setPhoto(canvas.toDataURL('image/jpeg', 0.9));\r\n    }\r\n  };\r\n\r\n  /** Fecha a câmera e libera recursos */  \r\n  const closeCamera = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      // Para todos os tracks de mídia\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null; \r\n    }\r\n    setCameraActive(false);\r\n    setPhoto(null);\r\n  };\r\n\r\n  // Limpeza global\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n      // Limpar timeout ao desmontar\r\n      if (notificationTimeout.current) {\r\n        clearTimeout(notificationTimeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CÁLCULO E RENDERIZAÇÃO\r\n  // ======================================================================\r\n\r\n\r\n\r\n  /** \r\n   * Calcula a diferença angular para feedback de alinhamento\r\n   * @param {number} targetAzimuth\r\n   * @returns number Diferença angular em graus 0-180\r\n   */\r\n  const calculateAngleDifference = (targetAzimuth) => {\r\n    const diff = Math.abs(targetAzimuth - deviceHeading) % 360;\r\n    return Math.min(diff, 360 - diff);\r\n  };\r\n\r\n  const calculateRelativeAngle = (targetAzimuth) => {\r\n    return normalizeAngle(targetAzimuth - deviceHeading);\r\n  };\r\n\r\n\r\n\r\n// Suaviza os ângulos de rotação\r\nuseEffect(() => {\r\n  if (sunAzimuth === null || moonAzimuth === null || deviceHeading === null) return;\r\n\r\n  const sunAngle = calculateRelativeAngle(sunAzimuth);\r\n  const moonAngle = calculateRelativeAngle(moonAzimuth);\r\n\r\n  setSmoothedSunAngle(prev => smoothAngle(prev, sunAngle, 0.2));\r\n  setSmoothedMoonAngle(prev => smoothAngle(prev, moonAngle, 0.2));\r\n}, [sunAzimuth, moonAzimuth, deviceHeading]);\r\n\r\n  /** Verifica alinhamento com o corpo celeste selecionado */\r\n  const targetAzimuth = celestialBody === 'sun' ? sunAzimuth : moonAzimuth;\r\n  const isAligned = calculateAngleDifference(targetAzimuth) < 15;\r\n\r\n\r\n  // ======================================================================\r\n  // RENDERIZAÇÃO DA INTERFACE\r\n  // ======================================================================\r\n\r\n  return (\r\n <div className={`app-container ${isDaytime ? 'day-theme' : 'night-theme'}`}>\r\n      <h1>{celestialBody === 'sun' ? '🌅 Localizando o Sol' : '🌙 Localizando a Lua'}</h1>\r\n      \r\n      {/* Botão de alternância */}\r\n      <div className=\"celestial-toggle\">\r\n        <button \r\n          className={celestialBody === 'sun' ? 'active' : ''}\r\n          onClick={() => setCelestialBody('sun')}\r\n        >\r\n          ☀️ Sol\r\n        </button>\r\n        <button \r\n          className={celestialBody === 'moon' ? 'active' : ''}\r\n          onClick={() => setCelestialBody('moon')}\r\n        >\r\n          🌙 Lua\r\n        </button>\r\n      </div>\r\n\r\n      {/* Informações do corpo celeste */}\r\n      <div className=\"celestial-info\">\r\n        {celestialBody === 'sun' ? (\r\n          <div className=\"info-cards\">\r\n            <div className=\"info-card\">\r\n              <span>☀️ Nascer do sol</span>\r\n              <strong>{formatTime(sunTimes?.sunrise)}</strong>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <span>🌇 Pôr do sol</span>\r\n              <strong>{formatTime(sunTimes?.sunset)}</strong>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"info-cards\">\r\n            <div className=\"info-card\">\r\n              <span>🌕 Nascer da lua</span>\r\n              <strong>{formatTime(moonTimes?.moonrise)}</strong>\r\n            </div>\r\n            <div className=\"info-card\">\r\n              <span>🌑 Pôr da lua</span>\r\n              <strong>{formatTime(moonTimes?.moonset)}</strong>\r\n            </div>\r\n            {/* Novo card para fase lunar */}\r\n            <div className=\"info-card moon-phase\">\r\n              <span>{moonPhase.emoji} Fase</span>\r\n              <strong>{moonPhase.name}</strong>\r\n              <div className=\"moon-phase-bar\">\r\n                <div \r\n                  className=\"moon-phase-fill\"\r\n                  style={{ width: `${moonPhase.fraction * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <span className=\"moon-percentage\">\r\n                {Math.round(moonPhase.fraction * 100)}% iluminada\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n      {/* Área da câmera */}      \r\n      {cameraActive && (\r\n        <div className=\"camera-container\">\r\n          <video\r\n            ref={videoRef}\r\n            className={`camera-preview${facingMode === 'user' ? ' mirrored' : ''}`}\r\n            playsInline\r\n            muted\r\n          />\r\n\r\n          <div className=\"camera-controls\">\r\n            <button className=\"camera-btn\" onClick={toggleCamera} aria-label=\"Alternar câmera\">\r\n              🔄\r\n            </button>\r\n            <button className=\"camera-btn capture-btn\" onClick={capturePhoto} aria-label=\"Capturar foto\">\r\n              ⭕\r\n            </button>\r\n            <button className=\"camera-btn\" onClick={closeCamera} aria-label=\"Fechar câmera\">\r\n              ✖\r\n            </button>\r\n          </div>\r\n\r\n          {photo && (\r\n            <div className=\"photo-preview\">\r\n              <img src={photo} alt=\"Foto capturada\" />\r\n              <a \r\n                href={photo} \r\n                download={`por-do-sol-${Date.now()}.jpg`}\r\n                className=\"download-button\"\r\n              >\r\n                ⬇️ Baixar\r\n              </a>\r\n              <button onClick={() => setPhoto(null)} className=\"close-button\">\r\n                ❌ Fechar\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Bússola digital e informações */}\r\n      <div className=\"compass-wrapper \">\r\n        <div className=\"compass\">\r\n          {/* Ponteiro do Sol (sempre visível) */}\r\n         <div \r\n  className={`direction-arrow ${celestialBody === 'sun' ? 'active' : 'secondary'}`} \r\n  style={{ \r\n    transform: `rotate(${smoothedSunAngle}deg)` \r\n  }}\r\n>\r\n  <div className=\"celestial-indicator sun-indicator\">☀️</div>\r\n</div>\r\n\r\n{/* Ponteiro da Lua */}\r\n<div \r\n  className={`direction-arrow ${celestialBody === 'moon' ? 'active' : 'secondary'}`} \r\n  style={{ \r\n    transform: `rotate(${smoothedMoonAngle}deg)` \r\n  }}\r\n>\r\n  <div className=\"celestial-indicator moon-indicator\">\r\n    {moonPhase.emoji}              \r\n  </div>            \r\n </div>   \r\n</div>\r\n\r\n        {/* Botão para ativar câmera */}\r\n        {!cameraActive && (\r\n          <button \r\n            className=\"main-camera-btn\"\r\n            onClick={() => setCameraActive(true)}\r\n          >\r\n            📸 Ativar Câmera\r\n          </button>\r\n        )}\r\n\r\n        {/* Painel de informações */}\r\n        <div className=\"info-panel\">\r\n          <p>\r\n            🧭 Direção: {celestialBody === 'sun'\r\n              ? `${sunAzimuth.toFixed(1)}° (Sol)`\r\n              : `${moonAzimuth.toFixed(1)}° (Lua)`}\r\n          </p>\r\n          <div className={`alignment-feedback ${isAligned ? 'aligned' : ''}`}>\r\n            {isAligned\r\n              ? `⭐ ALINHADO COM ${celestialBody === 'sun' ? 'O SOL' : 'A LUA'}! ⭐`\r\n              : `Gire o dispositivo para ${celestialBody === 'sun' ? 'o Sol' : 'a Lua'}... ➡️`}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* Exibição de erros */}\r\n      {error && <div className=\"error-banner\">{error}</div>}\r\n      \r\n      {/* Canvas oculto para captura de fotos */}      \r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Função utilitária para formatar horários\r\nfunction formatTime(date) {\r\n  if (!date) return '--:--';\r\n  const d = new Date(date);\r\n  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n}\r\n\r\nexport default App;","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n)\r\n"],"names":["getCurrentSunAzimuth","lat","lng","now","SunCalc.getPosition","getCurrentMoonAzimuth","SunCalc.getMoonPosition","normalizeOrientation","alpha","smoothAngle","previous","current","factor","diff","normalizeAngle","angle","App","position","setPosition","useState","sunAzimuth","setSunAzimuth","deviceHeading","setDeviceHeading","error","setError","cameraActive","setCameraActive","photo","setPhoto","facingMode","setFacingMode","isDaytime","setIsDaytime","sunTimes","setSunTimes","celestialBody","setCelestialBody","moonAzimuth","setMoonAzimuth","moonTimes","setMoonTimes","moonPhase","setMoonPhase","videoRef","useRef","canvasRef","notificationTimeout","notificationPermission","setNotificationPermission","notificationScheduled","setNotificationScheduled","smoothedSunAngle","setSmoothedSunAngle","smoothedMoonAngle","setSmoothedMoonAngle","getMoonPhaseEmoji","fraction","getMoonPhaseName","phase","useEffect","permission","handleSuccess","pos","handleError","err","watchId","updateAzimuths","interval","handleOrientation","event","updateCelestialData","times","SunCalc.getTimes","sunPos","SunCalc.getMoonTimes","moonIllumination","SunCalc.getMoonIllumination","scheduleSunsetNotification","useCallback","notificationTime","timeUntilNotification","stream","constraints","track","toggleCamera","prev","capturePhoto","video","canvas","ctx","closeCamera","_a","calculateAngleDifference","targetAzimuth","calculateRelativeAngle","sunAngle","moonAngle","isAligned","jsx","jsxs","formatTime","date","createRoot","StrictMode"],"mappings":"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"}