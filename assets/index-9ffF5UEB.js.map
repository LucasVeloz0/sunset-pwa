{"version":3,"file":"index-9ffF5UEB.js","sources":["../../src/utils/sunUtils.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import * as SunCalc from 'suncalc'; // Adicione esta linha no topo\r\n\r\n/**\r\n * Calcula a direção do pôr do sol em graus\r\n * @param {number} lat - Latitude\r\n * @param {number} lng - Longitude\r\n * @returns {number} Azimute em graus (0 = Norte, 90 = Leste)\r\n */\r\nexport const getSunsetDirection = (lat, lng) => {\r\n  const now = new Date();\r\n  const sunsetTime = SunCalc.getTimes(now, lat, lng).sunset;\r\n  const sunPos = SunCalc.getPosition(sunsetTime, lat, lng);\r\n    // Converte radianos para graus e normaliza para 0-360\r\n  return ((sunPos.azimuth * 180 / Math.PI) + 180) % 360;\r\n};\r\n\r\n/**\r\n * Normaliza a orientação do dispositivo\r\n * @param {number} alpha - Ângulo da bússola (0-360)\r\n * @returns {number} Ângulo ajustado\r\n */\r\nexport const normalizeOrientation = (alpha) => {\r\n  return (360 - alpha) % 360;\r\n};\r\n\r\n/**\r\n * Normaliza um ângulo para o intervalo [-180, 180]\r\n * Isso permite transições suaves através do ponto 0/360\r\n */\r\nexport const normalizeAngle = (angle) => {\r\n  angle = angle % 360;\r\n  if (angle > 180) {\r\n    angle -= 360;\r\n  }\r\n  if (angle < -180) {\r\n    angle += 360;\r\n  }\r\n  return angle;\r\n};\r\n\r\n/**\r\n * Calcula a diferença angular mais curta entre dois ângulos\r\n */\r\nexport const shortestAngleDiff = (target, current) => {\r\n  const diff = normalizeAngle(target - current);\r\n  return diff;\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as SunCalc from 'suncalc';\r\nimport { getSunsetDirection, normalizeOrientation } from './utils/sunUtils';\r\nimport './App.css';\r\n\r\n\r\n/**\r\n * Componente principal do aplicativo Guia Fotográfico do Pôr do Sol.\r\n * Gerencia:\r\n * - Geolocalização do usuário\r\n * - Cálculo da direção do sol\r\n * - Orientação do dispositivo\r\n * - Controle de câmera e captura de fotos\r\n * - Interface de bússola digital\r\n */\r\n\r\nconst App = () => {\r\n  // Estados do aplicativo\r\n  const [position, setPosition] = useState(null); // Armazena {lat, lng} do usuário\r\n  const [sunAzimuth, setSunAzimuth] = useState(0); // Direção do sol em graus (0-360)\r\n  const [deviceHeading, setDeviceHeading] = useState(0); // Direção do dispositivo em graus (0-360)\r\n  const [error, setError] = useState(null); // Mensagens de erro\r\n  const [cameraActive, setCameraActive] = useState(false); // Controle de estado da câmera\r\n  const [photo, setPhoto] = useState(null); // URL da foto capturada\r\n  const [facingMode, setFacingMode] = useState('environment'); // 'environment' (traseira) ou 'user' (frontal)\r\n\r\n  // Referências para elementos DOM\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // ======================================================================\r\n  // EFEITOS PARA INICIALIZAÇÃO E GERENCIAMENTO DE RECURSOS\r\n  // ======================================================================\r\n\r\n  /**\r\n   * Efeito para obtenção da geolocalização do usuário.\r\n   * Executa apenas uma vez na montagem do componente.\r\n   */  \r\n  useEffect(() => {\r\n    const handleSuccess = (pos) => {\r\n      setPosition({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude\r\n      });\r\n    };\r\n\r\n    const handleError = (err) => {\r\n      setError(err.message || 'Erro ao obter localização');\r\n    };\r\n\r\n    // Verifica suporte a geolocalização\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocalização não suportada');\r\n      return;\r\n    }\r\n\r\n    // Solicita localização com alta precisão\r\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Efeito para cálculo da direção do sol.\r\n   * Executa sempre que a posição do usuário muda.\r\n   */\r\n  useEffect(() => {\r\n    if (position) {\r\n      // Calcula o azimute do pôr do sol usando a biblioteca SunCalc\r\n      const azimuth = getSunsetDirection(position.lat, position.lng);\r\n      setSunAzimuth(azimuth);\r\n    }\r\n  }, [position]);\r\n  /**\r\n   * Efeito para configuração do sensor de orientação.\r\n   * Adiciona listener para eventos de orientação do dispositivo.\r\n   */\r\n  useEffect(() => {\r\n    const handleOrientation = (event) => {\r\n      if (event.alpha !== null) {\r\n        let alpha = event.alpha;\r\n        // Tratamento especial para iOS (webkitCompassHeading)\r\n        if (typeof event.webkitCompassHeading !== 'undefined') {\r\n          alpha = event.webkitCompassHeading;\r\n        }\r\n\r\n        // Normaliza e atualiza a direção do dispositivo\r\n        setDeviceHeading(normalizeOrientation(alpha));\r\n      }\r\n    };\r\n\r\n    // Verifica suporte ao sensor\r\n    if (window.DeviceOrientationEvent) {\r\n      window.addEventListener('deviceorientation', handleOrientation, true);\r\n    } else {\r\n      setError('Sensor de orientação não suportado neste dispositivo');\r\n    }\r\n    \r\n    // Limpeza: remove listener ao desmontar\r\n    return () => {\r\n      window.removeEventListener('deviceorientation', handleOrientation);\r\n    };\r\n  }, []);\r\n\r\n    /**\r\n   * Efeito para controle da câmera.\r\n   * Gerencia ciclo de vida do stream de vídeo:\r\n   * - Inicia câmera quando cameraActive é true\r\n   * - Para stream quando desativado ou ao desmontar\r\n   * - Alterna entre câmeras quando facingMode muda\r\n   */\r\n  useEffect(() => {\r\n    let stream = null;\r\n    \r\n    const startCamera = async () => {\r\n      try {\r\n        // Evita múltiplas inicializações\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          return; // Já está ativo\r\n        }\r\n        \r\n        // Configurações da câmera\r\n        const constraints = {\r\n          video: { \r\n            facingMode: facingMode,\r\n            width: { ideal: 1280 },\r\n            height: { ideal: 720 }\r\n          }\r\n        };\r\n\r\n        // Antes de pedir novo stream, pare o anterior se existir\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n          videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n          videoRef.current.srcObject = null;\r\n        }\r\n        // Agora peça o novo stream normalmente\r\n        stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n        // Configura elemento de vídeo        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          videoRef.current.onloadedmetadata = () => {\r\n            videoRef.current.play().catch(err => {\r\n              setError('Erro ao reproduzir vídeo: ' + err.message);\r\n            });\r\n          };\r\n        }\r\n      } catch (err) {\r\n        setError('Erro ao acessar câmera: ' + err.message);\r\n        setCameraActive(false);\r\n      }\r\n    };\r\n\r\n    // Inicia câmera se estiver ativa    \r\n    if (cameraActive) {\r\n      startCamera();\r\n    }\r\n\r\n    // Limpeza: para todos os tracks ao desmontar ou mudar dependências\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [cameraActive, facingMode]);\r\n\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CONTROLE DA CÂMERA\r\n  // ======================================================================\r\n\r\n  /** Alterna entre câmeras frontal e traseira */\r\n  const toggleCamera = () => {\r\n    setFacingMode(prev => prev === 'user' ? 'environment' : 'user');\r\n  };\r\n\r\n  /** Captura uma foto do vídeo atual e gera data URL */  \r\n  const capturePhoto = () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    \r\n    // Verifica se o vídeo está pronto    \r\n    if (video && canvas && video.readyState >= 2) {\r\n      // Configura canvas com dimensões do vídeo      \r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      \r\n      // Aplica flip horizontal apenas para câmera frontal      \r\n      if (facingMode === 'user') {\r\n        ctx.translate(canvas.width, 0);\r\n        ctx.scale(-1, 1);\r\n      }\r\n      \r\n      // Captura frame atual do vídeo      \r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      // Gera URL da imagem e atualiza estado      \r\n      setPhoto(canvas.toDataURL('image/jpeg', 0.9));\r\n    }\r\n  };\r\n\r\n  /** Fecha a câmera e libera recursos */  \r\n  const closeCamera = () => {\r\n    if (videoRef.current?.srcObject) {\r\n      // Para todos os tracks de mídia\r\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      videoRef.current.srcObject = null; \r\n    }\r\n    setCameraActive(false);\r\n    setPhoto(null); // Reseta foto capturada\r\n  };\r\n\r\n  // Efeito de limpeza global\r\n  useEffect(() => {\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // ======================================================================\r\n  // FUNÇÕES DE CÁLCULO E RENDERIZAÇÃO\r\n  // ======================================================================\r\n\r\n  /** \r\n   * Calcula ângulo relativo entre direção do sol e dispositivo \r\n   * @ returns number Ângulo em graus 0-360\r\n    */\r\n  const calculateRelativeAngle = () => {\r\n    let relativeAngle = (sunAzimuth - deviceHeading + 360) % 360;\r\n  \r\n  // Suaviza a transição quando passa pelo ponto 0/360\r\n  if (relativeAngle > 180) {\r\n    relativeAngle -= 360;\r\n  }\r\n  \r\n  return relativeAngle;\r\n  };\r\n\r\n  /** Verifica se dispositivo está alinhado com o sol (margem de 15 graus) */  \r\n  const isAligned = Math.abs(calculateRelativeAngle()) < 15;\r\n\r\n  // ======================================================================\r\n  // RENDERIZAÇÃO DA INTERFACE\r\n  // ======================================================================\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>🌅 Localizando o Pôr do Sol</h1>\r\n\r\n      {/* Área da câmera */}\r\n      {cameraActive && (\r\n        <div className=\"camera-container\">\r\n          {/* Elemento de vídeo para preview da câmera */}\r\n          <video\r\n            ref={videoRef}\r\n            className={`camera-preview${facingMode === 'user' ? ' mirrored' : ''}`}\r\n            playsInline // Necessário para iOS\r\n            muted // Não reproduz áudio\r\n          />\r\n\r\n          {/* Controles da câmera */}          \r\n          <div className=\"camera-controls\">\r\n            <button className=\"camera-btn\" onClick={toggleCamera} aria-label=\"Alternar câmera\">\r\n            🔄\r\n            </button>\r\n              <button className=\"camera-btn capture-btn\" onClick={capturePhoto} aria-label=\"Capturar foto\">\r\n             ⭕\r\n             </button>\r\n             <button className=\"camera-btn\" onClick={closeCamera} aria-label=\"Fechar câmera\">\r\n              ✖\r\n             </button>\r\n          </div>\r\n\r\n          {/* Preview da foto capturada */}\r\n          {photo && (\r\n            <div className=\"photo-preview\">\r\n              <img src={photo} alt=\"Foto capturada\" />\r\n              <a \r\n                href={photo} \r\n                download={`por-do-sol-${Date.now()}.jpg`}\r\n                className=\"download-button\"\r\n              >\r\n                ⬇️ Baixar\r\n              </a>\r\n\r\n                <button \r\n                 onClick={() => setPhoto(null)} \r\n                  className=\"close-button\" >\r\n                  ❌ Fechar\r\n                 </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Botão para ativar câmera */}\r\n      {!cameraActive && (\r\n        <button \r\n          className=\"main-camera-btn\"\r\n          onClick={() => setCameraActive(true)}\r\n        >\r\n          📸 Ativar Câmera\r\n        </button>\r\n      )}\r\n\r\n      {/* Bússola digital e informações */}\r\n      <div className=\"compass-wrapper\">\r\n        <div className=\"compass\">\r\n          {/* Seta direcional que aponta para o sol */}          \r\n          <div \r\n            className=\"direction-arrow\"\r\n            style={{ transform: `rotate(${calculateRelativeAngle()}deg)` }}\r\n          >\r\n            <div className=\"sun-indicator\">☀️</div>\r\n          </div>\r\n          {/* Marcador de alinhamento */}          \r\n          <div className=\"alignment-marker\"></div>\r\n        </div>\r\n\r\n        {/* Painel de informações */}\r\n        <div className=\"info-panel\">\r\n          {/* Horário do pôr do sol */}\r\n          <p>⏱ Horário do pôr do sol: {\r\n            position && \r\n            new Date(SunCalc.getTimes(new Date(), position.lat, position.lng).sunset)\r\n              .toLocaleTimeString()\r\n          }</p>\r\n\r\n          {/* Direção do sol */}          \r\n          <p>🧭 Direção: {sunAzimuth.toFixed(1)}°</p>\r\n          {/* Feedback de alinhamento */}          \r\n          <div className={`alignment-feedback ${isAligned ? 'aligned' : ''}`}>\r\n            {isAligned ? '⭐ ALINHADO! ⭐' : 'Gire o dispositivo... ➡️'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Exibição de erros */}\r\n      {error && <div className=\"error-banner\">{error}</div>}\r\n      \r\n      {/* Canvas oculto para captura de fotos */}      \r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n)\r\n"],"names":["getSunsetDirection","lat","lng","now","sunsetTime","SunCalc.getTimes","SunCalc.getPosition","normalizeOrientation","alpha","App","position","setPosition","useState","sunAzimuth","setSunAzimuth","deviceHeading","setDeviceHeading","error","setError","cameraActive","setCameraActive","photo","setPhoto","facingMode","setFacingMode","videoRef","useRef","canvasRef","useEffect","handleSuccess","pos","handleError","err","azimuth","handleOrientation","event","stream","constraints","track","toggleCamera","prev","capturePhoto","video","canvas","ctx","closeCamera","_a","calculateRelativeAngle","relativeAngle","isAligned","jsxs","jsx","createRoot","StrictMode"],"mappings":"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"}