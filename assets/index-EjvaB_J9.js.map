{"version":3,"file":"index-EjvaB_J9.js","sources":["../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as SunCalc from 'suncalc';\nimport './App.css';\n\nfunction App() {\n  const [location, setLocation] = useState(null);\n  const [sunsetData, setSunsetData] = useState(null);\n  const [deviceOrientation, setDeviceOrientation] = useState(0);\n  const [error, setError] = useState(null);\n\n  // 1. Obter geolocalização\n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            setLocation({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            });\n          },\n          (err) => setError(\"Ative a localização para usar o app\")\n        );\n      } else {\n        setError(\"Geolocalização não suportada\");\n      }\n    };\n    getLocation();\n  }, []);\n\n  // 2. Calcular direção do pôr do sol\n  useEffect(() => {\n    if (location) {\n      const now = new Date();\n      const times = SunCalc.getTimes(now, location.lat, location.lng);\n      const sunsetPos = SunCalc.getPosition(times.sunset, location.lat, location.lng);\n      const azimuth = (sunsetPos.azimuth * 180 / Math.PI + 180) % 360;\n      \n      setSunsetData({\n        time: times.sunset.toLocaleTimeString(),\n        azimuth\n      });\n    }\n  }, [location]);\n\n  // 3. Configurar sensor de orientação\n  useEffect(() => {\n    const handleOrientation = (e) => {\n      if (e.alpha !== null) {\n        setDeviceOrientation(360 - e.alpha); // Normaliza para 0-360°\n      }\n    };\n\n    window.addEventListener('deviceorientation', handleOrientation, true);\n    \n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation);\n    };\n  }, []);\n\n  // 4. Calcular ângulo relativo\n  const calculateRelativeAngle = () => {\n    if (!sunsetData) return 0;\n    return (sunsetData.azimuth - deviceOrientation + 360) % 360;\n  };\n\n  const relativeAngle = calculateRelativeAngle();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Bússola do Pôr do Sol</h1>\n        \n        {error && <p className=\"error\">{error}</p>}\n\n        {sunsetData && (\n          <div className=\"compass-container\">\n            <div className=\"compass\">\n              <div \n                className=\"arrow\" \n                style={{ transform: `rotate(${relativeAngle}deg)` }}\n              >\n                <div className=\"sun-icon\">☀️</div>\n              </div>\n              <div className=\"compass-circle\"></div>\n            </div>\n            \n            <div className=\"info\">\n              <p>Horário: {sunsetData.time}</p>\n              <p>Direção: {sunsetData.azimuth.toFixed(1)}°</p>\n              <p className=\"help\">Gire o celular para alinhar a bússola</p>\n            </div>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["App","location","setLocation","useState","sunsetData","setSunsetData","deviceOrientation","setDeviceOrientation","error","setError","useEffect","position","err","now","times","SunCalc.getTimes","azimuth","SunCalc.getPosition","handleOrientation","e","relativeAngle","jsxs","jsx","createRoot","StrictMode"],"mappings":"q0BAIA,SAASA,GAAM,CACb,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAS,IAAI,EACvC,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAAS,IAAI,EAC3C,CAACG,EAAmBC,CAAoB,EAAIJ,EAAAA,SAAS,CAAC,EACtD,CAACK,EAAOC,CAAQ,EAAIN,EAAAA,SAAS,IAAI,EAGvCO,EAAAA,UAAU,IAAM,EACM,IAAM,CACpB,UAAU,YACZ,UAAU,YAAY,mBACnBC,GAAa,CACAT,EAAA,CACV,IAAKS,EAAS,OAAO,SACrB,IAAKA,EAAS,OAAO,SAAA,CACtB,CACH,EACCC,GAAQH,EAAS,qCAAqC,CACzD,EAEAA,EAAS,8BAA8B,CAE3C,GACY,CACd,EAAG,EAAE,EAGLC,EAAAA,UAAU,IAAM,CACd,GAAIT,EAAU,CACN,MAAAY,MAAU,KACVC,EAAQC,EAAAA,SAAiBF,EAAKZ,EAAS,IAAKA,EAAS,GAAG,EAExDe,GADYC,EAAoB,YAAAH,EAAM,OAAQb,EAAS,IAAKA,EAAS,GAAG,EACnD,QAAU,IAAM,KAAK,GAAK,KAAO,IAE9CI,EAAA,CACZ,KAAMS,EAAM,OAAO,mBAAmB,EACtC,QAAAE,CAAA,CACD,CAAA,CACH,EACC,CAACf,CAAQ,CAAC,EAGbS,EAAAA,UAAU,IAAM,CACR,MAAAQ,EAAqBC,GAAM,CAC3BA,EAAE,QAAU,MACOZ,EAAA,IAAMY,EAAE,KAAK,CAEtC,EAEO,cAAA,iBAAiB,oBAAqBD,EAAmB,EAAI,EAE7D,IAAM,CACJ,OAAA,oBAAoB,oBAAqBA,CAAiB,CACnE,CACF,EAAG,EAAE,EAQL,MAAME,EAJChB,GACGA,EAAW,QAAUE,EAAoB,KAAO,IADhC,EAM1B,aACG,MAAI,CAAA,UAAU,MACb,SAACe,EAAA,KAAA,SAAA,CAAO,UAAU,aAChB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EAExBd,GAASc,EAAA,IAAC,IAAE,CAAA,UAAU,QAAS,SAAMd,EAAA,EAErCJ,GACCiB,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAA,IAAC,MAAA,CACC,UAAU,QACV,MAAO,CAAE,UAAW,UAAUF,CAAa,MAAO,EAElD,SAACE,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAAE,IAAA,CAAA,CAAA,CAC9B,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,gBAAiB,CAAA,CAAA,EAClC,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAA,YAAUjB,EAAW,IAAA,EAAK,SAC5B,IAAE,CAAA,SAAA,CAAA,YAAUA,EAAW,QAAQ,QAAQ,CAAC,EAAE,GAAA,EAAC,EAC3CkB,EAAA,IAAA,IAAA,CAAE,UAAU,OAAO,SAAqC,uCAAA,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAEJ,CC5FAC,EAAA,WAAW,SAAS,eAAe,MAAM,CAAC,EAAE,OACzCD,EAAA,IAAAE,EAAA,WAAA,CACC,SAACF,EAAAA,IAAAtB,EAAA,CAAA,CAAI,CACP,CAAA,CACF"}